{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack:///./src/panels/profile/ha-change-password-card.js","webpack:///./src/panels/profile/ha-panel-profile.js"],"names":["_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","PaperDialogBehaviorImpl","hostAttributes","role","tabindex","properties","modal","type","Boolean","value","__readied","observers","listeners","tap","ready","this","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","Object","b","i","l","indexOf","target","hasAttribute","close","stopPropagation","PaperDialogBehavior","_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__","a","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_template","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_templateObject","is","behaviors","_polymer_paper_dialog_behavior_paper_dialog_behavior_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_neon_animation_neon_animation_runner_behavior_js__WEBPACK_IMPORTED_MODULE_1__","neon-animation-finish","_renderOpened","cancelAnimation","playAnimation","_renderClosed","_onNeonAnimationFinish","opened","_finishRenderOpened","_finishRenderClosed","ha_change_password_card_HaChangePasswordCard","polymer_element","_createClass","HaChangePasswordCard","key","_this2","prototype","__proto__","getPrototypeOf","call","addEventListener","ev","_statusMsg","keyCode","_changePassword","_currentPassword","_password1","_password2","_errorMsg","_context","abrupt","_loading","prev","next","hass","callWS","current_password","new_password","setProperties","t0","catch","message","stop","_callee","_ref","apply","arguments","get","html_tag","String","customElements","define","ha_panel_profile_HaPanelProfile","events_mixin","ha_panel_profile_createClass","HaPanelProfile","fire","ha_panel_profile_templateObject","narrow","showMenu"],"mappings":"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","file":"53c790ad420f6729d7b0.chunk.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { IronOverlayBehavior } from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport { dom } from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area, and\n  an action area for buttons. Use the `<h2>` tag for the header and the `buttons`\n  class for the action area. You can use the `paper-dialog-scrollable` element (in\n  its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive controls\n  to close the dialog. If the user dismisses the dialog with `dialog-confirm`, the\n  `closingReason` will update to include `confirmed: true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may be\n  more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the element.\n  It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior Polymer.PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior = [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","import '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color                     | `--primary-background-color`\n`--paper-dialog-color`            | Dialog foreground color                     | `--primary-text-color`\n`--paper-dialog`                  | Mixin applied to the dialog                 | `{}`\n`--paper-dialog-title`            | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color`     | Button area foreground color                | `--default-primary-color`\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\n;\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\nMaterial design: [Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional animations when it is\nopened or closed. It provides styles for a header, content area, and an action area for buttons.\nYou can use the `<paper-dialog-scrollable>` element (in its own repository) if you need a scrolling\ncontent area. To autofocus a specific child element after opening the dialog, give it the `autofocus`\nattribute. See `Polymer.PaperDialogBehavior` and `Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling content area and\nbuttons. Focus will be given to the `dialog-confirm` button when the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties available for styling\nthis element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation when the dialog\nis opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation) for more info.\n\nFor example:\n\n    <link rel=\"import\" href=\"components/neon-animation/animations/scale-up-animation.html\">\n    <link rel=\"import\" href=\"components/neon-animation/animations/fade-out-animation.html\">\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features implemented by this\nelement.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport { NeonAnimationRunnerBehavior } from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport { PaperDialogBehavior } from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\nimport { Polymer } from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","import '@polymer/paper-button/paper-button.js';\nimport '@polymer/paper-dialog/paper-dialog.js';\nimport '@polymer/paper-spinner/paper-spinner.js';\nimport '@polymer/paper-card/paper-card.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../resources/ha-style.js';\n\nclass HaChangePasswordCard extends PolymerElement {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      .error {\n        color: red;\n      }\n      .status {\n        color: var(--primary-color);\n      }\n      .error, .status {\n        position: absolute;\n        top: -4px;\n      }\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 16px auto;\n      }\n      .currentPassword {\n        margin-top: -4px;\n      }\n    </style>\n    <div>\n      <paper-card heading=\"Change Password\">\n        <div class=\"card-content\">\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class='error'>[[_errorMsg]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[_statusMsg]]\">\n            <div class=\"status\">[[_statusMsg]]</div>\n          </template>\n          <paper-input\n            autofocus\n            class='currentPassword'\n            label='Current Password'\n            type='password'\n            value='{{_currentPassword}}'\n            required\n            auto-validate\n            error-message='Required'\n          ></paper-input>\n          <paper-input\n            label='New Password'\n            type='password'\n            value='{{_password1}}'\n            required\n            auto-validate\n            error-message='Required'\n          ></paper-input>\n          <paper-input\n            label='Confirm New Password'\n            type='password'\n            value='{{_password2}}'\n            required\n            auto-validate\n            error-message='Required'\n          ></paper-input>\n        </div>\n        <div class=\"card-actions\">\n          <template is=\"dom-if\" if=\"[[_loading]]\">\n            <div><paper-spinner active></paper-spinner></div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_loading]]\">\n            <paper-button on-click=\"_changePassword\">Submit</paper-button>\n          </template>\n        </div>\n      </paper-card>\n    </div>\n`;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _statusMsg: String,\n      _errorMsg: String,\n\n      _currentPassword: String,\n      _password1: String,\n      _password2: String,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener('keypress', (ev) => {\n      this._statusMsg = null;\n      if (ev.keyCode === 13) {\n        this._changePassword();\n      }\n    });\n  }\n\n  async _changePassword() {\n    this._statusMsg = null;\n    if (!this._currentPassword || !this._password1 || !this._password2) return;\n\n    if (this._password1 !== this._password2) {\n      this._errorMsg = \"New password confirmation doesn't match\";\n      return;\n    }\n\n    if (this._currentPassword === this._password1) {\n      this._errorMsg = 'New password must be different than current password';\n      return;\n    }\n\n    this._loading = true;\n    this._errorMsg = null;\n\n    try {\n      await this.hass.callWS({\n        type: 'config/auth_provider/homeassistant/change_password',\n        current_password: this._currentPassword,\n        new_password: this._password1,\n      });\n\n      this.setProperties({\n        _statusMsg: 'Password changed successfully',\n        _currentPassword: null,\n        _password1: null,\n        _password2: null\n      });\n    } catch (err) {\n      this._errorMsg = err.message;\n    }\n\n    this._loading = false;\n  }\n}\n\ncustomElements.define('ha-change-password-card', HaChangePasswordCard);\n","import '@polymer/app-layout/app-header-layout/app-header-layout.js';\nimport '@polymer/app-layout/app-header/app-header.js';\nimport '@polymer/paper-card/paper-card.js';\nimport '@polymer/paper-button/paper-button.js';\nimport '@polymer/app-layout/app-toolbar/app-toolbar.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport '../../components/ha-menu-button.js';\nimport '../../resources/ha-style.js';\nimport './ha-change-password-card.js';\n\nimport EventsMixin from '../../mixins/events-mixin.js';\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaPanelProfile extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n    <style include=\"ha-style\">\n      :host {\n        -ms-user-select: initial;\n        -webkit-user-select: initial;\n        -moz-user-select: initial;\n      }\n\n      paper-card {\n        display: block;\n        max-width: 600px;\n        margin: 16px auto;\n      }\n    </style>\n\n    <app-header-layout has-scrolling-region>\n      <app-header slot=\"header\" fixed>\n        <app-toolbar>\n          <ha-menu-button narrow='[[narrow]]' show-menu='[[showMenu]]'></ha-menu-button>\n          <div main-title>Profile</div>\n        </app-toolbar>\n      </app-header>\n\n      <div class='content'>\n        <paper-card heading='[[hass.user.name]]'>\n          <div class='card-content'>\n            You are currently logged in as [[hass.user.name]].\n            <template is='dom-if' if='[[hass.user.is_owner]]'>You are an owner.</template>\n          </div>\n          <div class='card-actions'>\n            <paper-button\n              class='warning'\n              on-click='_handleLogOut'\n            >Log out</paper-button>\n          </div>\n        </paper-card>\n        <ha-change-password-card hass=\"[[hass]]\"></ha-change-password-card>\n      </div>\n    </app-header-layout>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      narrow: Boolean,\n      showMenu: Boolean,\n    };\n  }\n\n  _handleLogOut() {\n    this.fire('hass-logout');\n  }\n}\n\ncustomElements.define('ha-panel-profile', HaPanelProfile);\n"],"sourceRoot":""}